<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotel Reservation System</title>
    <style>
        /* Basic Reset */
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }

        /* Body Styling */
        body {
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        /* Section Styling */
        .section {
            background: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            text-align: center;
        }

        .section h2 {
            color: #333;
            font-weight: bold;
            margin-bottom: 20px;
            font-size: 1.8em;
        }

        /* Input and Select Styling */
        select,
        input[type="text"],
        input[type="password"],
        input[type="date"],
        input[type="email"],
        input[type="number"] {
            width: 100%;
            padding: 12px;
            margin-bottom: 20px;
            border: 1px solid #dcdde1;
            border-radius: 8px;
            font-size: 1em;
            background-color: #f5f6f7;
        }

        select:focus,
        input:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
        }

        /* Button Styling */
        button {
            background-color: #007bff;
            color: #ffffff;
            padding: 12px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
            width: 100%;
            margin-top: 10px;
        }

        button:hover {
            background-color: #0056b3;
        }

        a {
            color: #007bff;
            text-decoration: none;
            display: block;
            text-align: center;
            margin-top: 10px;
        }

        a:hover {
            text-decoration: underline;
        }

        .hidden {
            display: none;
        }

        /* Reservation Styling */
        .reservation-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .reservation-item {
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #dcdde1;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .reservation-item p {
            margin: 5px 0;
            color: #333;
        }

        .reservation-item h3 {
            font-size: 1.2em;
            margin-bottom: 10px;
            color: #007bff;
            font-weight: bold;
        }

        /* Employee Pages */
        .room-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .room-item {
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #dcdde1;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .room-item p {
            margin: 5px 0;
            color: #333;
        }

        .room-item h3 {
            font-size: 1.2em;
            margin-bottom: 10px;
            color: #007bff;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <!-- Login Section -->
    <div id="loginSection" class="section">
        <h2>Login</h2>
        <form id="loginForm">
            <select id="userType" required>
                <option value="" disabled selected>Select User Type</option>
                <option value="customer">Customer</option>
                <option value="employee">Employee</option>
            </select>
            <input type="text" id="username" placeholder="Username" required>
            <input type="password" id="password" placeholder="Password" required>
            <button type="submit">Login</button>
            <a href="#" onclick="showRegistrationForm()">Create an Account</a>
        </form>
    </div>

    <!-- Registration Section -->
    <div id="registrationSection" class="section hidden">
        <h2>Create Account</h2>
        <form id="registrationForm">
            <input type="text" id="regUsername" placeholder="Username" required>
            <input type="email" id="regEmail" placeholder="Email" required>
            <input type="password" id="regPassword" placeholder="Password" required>
            <button type="submit">Register</button>
            <a href="#" onclick="showLoginForm()">Back to Login</a>
        </form>
    </div>

    <!-- Booking Section -->
    <div id="bookingSection" class="section hidden">
        <h2>Book a Room</h2>
        <form id="bookingForm">
            <select id="roomType" required>
                <option value="" disabled selected>Select Room</option>
            </select>
            <input type="date" id="checkinDate" required>
            <input type="date" id="checkoutDate" required>
            <button type="submit">Book</button>
        </form>
        <button onclick="logout()">Logout</button>
    </div>

    <!-- Reservation Section -->
    <div id="reservationSection" class="section hidden">
        <h2>Your Reservations</h2>
        <div id="reservationsList" class="reservation-list"></div>
        <button onclick="showBookingSection()">New Reservation</button>
        <button onclick="logout()">Logout</button>
    </div>

    <!-- Employee Section -->
    <div id="employeeSection" class="section hidden">
        <h2>Room Management</h2>
        <div id="roomList" class="room-list"></div>
        <form id="roomForm">
            <h3>Add or Update Room</h3>
            <input type="text" id="roomName" placeholder="Room Name (e.g., Suite)" required>
            <input type="number" id="roomPrice" placeholder="Price per Night" required min="0">
            <input type="number" id="roomCount" placeholder="Available Rooms (0-20)" required min="0" max="20">
            <button type="submit">Save Room</button>
        </form>
        <button onclick="showAllReservations()">View All Reservations</button>
        <button onclick="logout()">Logout</button>
    </div>

    <!-- All Reservations Section -->
    <div id="allReservationsSection" class="section hidden">
        <h2>All Reservations</h2>
        <div id="allReservationsList" class="reservation-list"></div>
        <form id="cleaningScheduleForm" class="hidden">
            <h3>Schedule Cleaning</h3>
            <input type="date" id="cleaningDate" required>
            <button type="submit">Schedule</button>
        </form>
        <button onclick="showEmployeeSection()">Back to Management</button>
        <button onclick="logout()">Logout</button>
    </div>

    <script>
        const employees = { admin: "admin123" }; // Employee credentials
        let rooms = [
            { type: "Single", price: 100, available: 10 },
            { type: "Double", price: 150, available: 8 },
            { type: "Suite", price: 250, available: 5 },
        ];

        function showLoginForm() {
            document.querySelectorAll('.section').forEach(section => section.classList.add('hidden'));
            document.getElementById('loginSection').classList.remove('hidden');
        }

        function showRegistrationForm() {
            document.getElementById('loginSection').classList.add('hidden');
            document.getElementById('registrationSection').classList.remove('hidden');
        }

        function showBookingSection() {
            document.querySelectorAll('.section').forEach(section => section.classList.add('hidden'));
            document.getElementById('bookingSection').classList.remove('hidden');
            populateRoomOptions();
        }

        function showReservations() {
            document.querySelectorAll('.section').forEach(section => section.classList.add('hidden'));
            document.getElementById('reservationSection').classList.remove('hidden');
            displayReservations();
        }

        function showEmployeeSection() {
            document.querySelectorAll('.section').forEach(section => section.classList.add('hidden'));
            document.getElementById('employeeSection').classList.remove('hidden');
            displayRooms();
        }

        function showAllReservations() {
            document.querySelectorAll('.section').forEach(section => section.classList.add('hidden'));
            document.getElementById('allReservationsSection').classList.remove('hidden');
            displayAllReservations();
        }

        function logout() {
            localStorage.removeItem("currentUser");
            alert("You have been logged out!");
            showLoginForm();
        }

        // Login, Registration, and Booking Handlers
        document.getElementById('loginForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const userType = document.getElementById('userType').value;
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;

            if (userType === "employee" && employees[username] === password) {
                alert("Employee login successful!");
                showEmployeeSection();
            } else {
                const customer = JSON.parse(localStorage.getItem(username));
                if (customer && customer.password === password) {
                    alert("Customer login successful!");
                    localStorage.setItem("currentUser", username);
                    showReservations();
                } else {
                    alert("Invalid credentials!");
                }
            }
        });

        document.getElementById('registrationForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const username = document.getElementById('regUsername').value;
            const email = document.getElementById('regEmail').value;
            const password = document.getElementById('regPassword').value;
            localStorage.setItem(username, JSON.stringify({ email, password, reservations: [] }));
            alert("Registration successful!");
            showLoginForm();
        });

        document.getElementById('bookingForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const roomType = document.getElementById('roomType').value;
            const checkinDate = document.getElementById('checkinDate').value;
            const checkoutDate = document.getElementById('checkoutDate').value;

            const room = rooms.find(r => r.type === roomType);
            if (room && room.available > 0) {
                const username = localStorage.getItem("currentUser");
                const customer = JSON.parse(localStorage.getItem(username));
                const newReservation = { roomType, checkinDate, checkoutDate };
                customer.reservations.push(newReservation);
                localStorage.setItem(username, JSON.stringify(customer));

                room.available--;
                alert(`Room ${roomType} booked successfully from ${checkinDate} to ${checkoutDate}.`);
                showReservations();
            } else {
                alert("Sorry, no rooms available.");
            }
        });

        document.getElementById('roomForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const roomName = document.getElementById('roomName').value;
            const roomPrice = parseInt(document.getElementById('roomPrice').value);
            const roomCount = parseInt(document.getElementById('roomCount').value);

            if (roomName && roomPrice >= 0 && roomCount >= 0 && roomCount <= 20) {
                const room = rooms.find(r => r.type === roomName);
                if (room) {
                    room.price = roomPrice;
                    room.available = roomCount;
                    alert(`Room ${roomName} updated successfully.`);
                } else {
                    rooms.push({ type: roomName, price: roomPrice, available: roomCount });
                    alert(`New room ${roomName} added successfully.`);
                }
                displayRooms();
            } else {
                alert("Please provide valid inputs.");
            }
        });

        // Reservation Management
        function displayReservations() {
            const username = localStorage.getItem("currentUser");
            const customer = JSON.parse(localStorage.getItem(username));
            const reservationsList = document.getElementById('reservationsList');
            reservationsList.innerHTML = '';

            if (customer.reservations.length > 0) {
                customer.reservations.forEach((res, index) => {
                    const resItem = document.createElement('div');
                    resItem.className = 'reservation-item';
                    resItem.innerHTML = `
                        <h3>Reservation #${index + 1}</h3>
                        <p><strong>Room:</strong> ${res.roomType}</p>
                        <p><strong>Check-in:</strong> ${res.checkinDate}</p>
                        <p><strong>Check-out:</strong> ${res.checkoutDate}</p>
                    `;
                    reservationsList.appendChild(resItem);
                });
            } else {
                reservationsList.innerHTML = '<p>No reservations found.</p>';
            }
        }

        function displayRooms() {
            const roomList = document.getElementById('roomList');
            roomList.innerHTML = '';
            rooms.forEach(room => {
                const roomItem = document.createElement('div');
                roomItem.className = 'room-item';
                roomItem.innerHTML = `
                    <h3>${room.type}</h3>
                    <p><strong>Price:</strong> $${room.price}/night</p>
                    <p><strong>Available Rooms:</strong> ${room.available}</p>
                `;
                roomList.appendChild(roomItem);
            });
        }

        function displayAllReservations() {
            const allReservationsList = document.getElementById('allReservationsList');
            allReservationsList.innerHTML = '';

            let foundReservations = false;

            for (let i = 0; i < localStorage.length; i++) {
                const key = localStorage.key(i);
                if (key === "currentUser" || employees[key]) continue;

                const customer = JSON.parse(localStorage.getItem(key));

                if (customer && customer.reservations && customer.reservations.length > 0) {
                    foundReservations = true;

                    customer.reservations.forEach((res, index) => {
                        const resItem = document.createElement('div');
                        resItem.className = 'reservation-item';
                        resItem.innerHTML = `
                            <h3>Customer: ${key} - Reservation #${index + 1}</h3>
                            <p><strong>Room:</strong> ${res.roomType}</p>
                            <p><strong>Check-in:</strong> ${res.checkinDate}</p>
                            <p><strong>Check-out:</strong> ${res.checkoutDate}</p>
                            <button onclick="cancelReservation('${key}', ${index})">Cancel</button>
                            <button onclick="scheduleCleaning('${key}', ${index})">Schedule Cleaning</button>
                        `;
                        allReservationsList.appendChild(resItem);
                    });
                }
            }

            if (!foundReservations) {
                allReservationsList.innerHTML = '<p>No reservations found.</p>';
            }
        }

        function cancelReservation(customerKey, reservationIndex) {
            const customer = JSON.parse(localStorage.getItem(customerKey));
            const reservation = customer.reservations[reservationIndex];

            if (confirm(`Cancel reservation for ${reservation.roomType} from ${reservation.checkinDate} to ${reservation.checkoutDate}?`)) {
                customer.reservations.splice(reservationIndex, 1);
                localStorage.setItem(customerKey, JSON.stringify(customer));

                const room = rooms.find(r => r.type === reservation.roomType);
                if (room) room.available++;

                alert("Reservation canceled successfully.");
                displayAllReservations();
            }
        }

        function scheduleCleaning(customerKey, reservationIndex) {
            const cleaningForm = document.getElementById('cleaningScheduleForm');
            cleaningForm.classList.remove('hidden');

            cleaningForm.onsubmit = function (event) {
                event.preventDefault();
                const cleaningDate = document.getElementById('cleaningDate').value;

                alert(`Cleaning scheduled for reservation #${reservationIndex + 1} on ${cleaningDate}.`);
                cleaningForm.classList.add('hidden');
            };
        }

        function populateRoomOptions() {
            const roomTypeSelect = document.getElementById('roomType');
            roomTypeSelect.innerHTML = '<option value="" disabled selected>Select Room</option>';
            rooms.forEach(room => {
                roomTypeSelect.innerHTML += `<option value="${room.type}">${room.type} - $${room.price}/night</option>`;
            });
        }
    </script>
</body>
</html>
